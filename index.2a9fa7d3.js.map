{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        // this.state = Game.getInitialState(initialState);\n        this.state = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.hasMoved = false;\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status === \"playing\") return this.makeMove(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status === \"playing\") return this.makeMove(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status === \"playing\") return this.makeMove(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status === \"playing\") return this.makeMove(\"down\");\n            }\n        },\n        {\n            key: \"makeMove\",\n            value: function makeMove(direction) {\n                this.hasMoved = this.moveLines(direction);\n                if (this.hasMoved) {\n                    this.generateNewCell();\n                    this.hasMoved = false;\n                    this.getStatus();\n                    return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"moveLines\",\n            value: function moveLines(direction) {\n                var precededCheckMove = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n                    precededCheckMove: false\n                }).precededCheckMove;\n                var size = this.state.length;\n                var isVertical = direction === \"up\" || direction === \"down\";\n                var state = precededCheckMove ? this.getStateCopy() : this.state;\n                var oldState = this.getStateCopy();\n                for(var i = 0; i < size; i++){\n                    var line = [];\n                    for(var j = 0; j < size; j++)line.push(isVertical ? this.state[j][i] : this.state[i][j]);\n                    var newLine = this.mergeLine(line, direction, {\n                        precededCheckMove: precededCheckMove\n                    });\n                    for(var j1 = 0; j1 < size; j1++)if (isVertical) state[j1][i] = newLine[j1];\n                    else state[i][j1] = newLine[j1];\n                }\n                return this.isMove(oldState, state);\n            }\n        },\n        {\n            key: \"isMove\",\n            value: function isMove(oldState, newState) {\n                for(var i = 0; i < oldState.length; i++)for(var j = 0; j < oldState.length; j++){\n                    if (oldState[i][j] !== newState[i][j]) return true; // if there is a diff in state\n                }\n                return false; // if there is no diff in state\n            }\n        },\n        {\n            key: \"mergeLine\",\n            value: function mergeLine(line, direction, param) {\n                var precededCheckMove = param.precededCheckMove;\n                var size = line.length;\n                var stack = [];\n                var newLine = new Array(size).fill(0);\n                var startIndex = direction === \"up\" || direction === \"left\" ? 0 : size - 1;\n                var endIndex = direction === \"up\" || direction === \"left\" ? size : -1;\n                var step = direction === \"up\" || direction === \"left\" ? 1 : -1;\n                var newIndex = startIndex;\n                for(var i = startIndex; i !== endIndex; i += step){\n                    var cellValue = line[i];\n                    if (cellValue !== 0) {\n                        if (stack.length === 0) stack.push(cellValue);\n                        else if (stack[0] === cellValue) {\n                            var mergedValue = +stack[0] + +cellValue;\n                            newLine[newIndex] = stack.pop() + cellValue;\n                            newIndex += step;\n                            if (!precededCheckMove) this.score += mergedValue;\n                        } else {\n                            newLine[newIndex] = stack.pop();\n                            newIndex += step;\n                            stack.push(cellValue);\n                        }\n                    }\n                }\n                if (stack.length > 0) newLine[newIndex] = stack.pop();\n                return newLine;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStateCopy\",\n            value: function getStateCopy() {\n                return this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                if (this.checkWin()) this.status = \"win\";\n                else if (this.status === \"playing\" && !this.hasMoreMove()) this.status = \"lose\";\n                return this.status;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                return this.state.some(function(line) {\n                    return line.includes(2048);\n                });\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.generateNewCell();\n                this.generateNewCell();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                // this.state = Game.getInitialState();\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        },\n        {\n            key: \"updateField\",\n            value: function updateField(field) {\n                for(var i = 0; i < field.rows.length; i++)for(var j = 0; j < field.rows[i].cells.length; j++){\n                    var cellValue = this.state[i][j];\n                    field.rows[i].cells[j].textContent = cellValue !== 0 ? cellValue : \"\";\n                    if (cellValue !== \"\") field.rows[i].cells[j].setAttribute(\"class\", \"field-cell field-cell--\".concat(cellValue));\n                }\n                var fragment = document.createDocumentFragment();\n                Array.from(field.rows).forEach(function(row) {\n                    return fragment.appendChild(row);\n                });\n                return fragment;\n            }\n        },\n        {\n            key: \"generateNewCell\",\n            value: function generateNewCell() {\n                var lines = this.state;\n                var cellNum = Math.random() < 0.1 ? 4 : 2;\n                var emptyCells = [];\n                for(var i = 0; i < lines.length; i++)for(var j = 0; j < lines[i].length; j++){\n                    var cellValue = lines[i][j];\n                    if (cellValue === 0) emptyCells.push({\n                        row: i,\n                        cell: j\n                    });\n                }\n                if (!emptyCells.length) {\n                    this.getStatus();\n                    return false; // do not generate new cell\n                }\n                var randomEmptyCellIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_randomEmptyCellIndex = emptyCells[randomEmptyCellIndex], row = _emptyCells_randomEmptyCellIndex.row, cell = _emptyCells_randomEmptyCellIndex.cell;\n                this.state[row][cell] = cellNum;\n            }\n        },\n        {\n            key: \"hasMoreMove\",\n            value: function hasMoreMove() {\n                return this.moveLines(\"up\", {\n                    precededCheckMove: true\n                }) || this.moveLines(\"down\", {\n                    precededCheckMove: true\n                }) || this.moveLines(\"left\", {\n                    precededCheckMove: true\n                }) || this.moveLines(\"right\", {\n                    precededCheckMove: true\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$field = document.querySelector(\".game-field tbody\");\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$messages = document.querySelectorAll(\".message\");\nvar $197cd56b15c33885$var$scoreDisplay = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$STATUS_CLASSES = {\n    start: \"message-start\",\n    win: \"message-win\",\n    lose: \"message-lose\"\n};\nvar $197cd56b15c33885$var$INITIAL_STATE = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports($197cd56b15c33885$var$INITIAL_STATE);\nvar $197cd56b15c33885$var$firstMove = true;\nvar $197cd56b15c33885$var$gameStart = false;\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startBtn.textContent === \"Start\") {\n        $197cd56b15c33885$var$gameStart = !$197cd56b15c33885$var$gameStart; // if startBtn push one more time\n        if ($197cd56b15c33885$var$gameStart) $197cd56b15c33885$var$game.start();\n        else {\n            $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports($197cd56b15c33885$var$INITIAL_STATE);\n            $197cd56b15c33885$var$game.start();\n            $197cd56b15c33885$var$gameStart = true;\n        }\n        $197cd56b15c33885$var$showMessage(null);\n        $197cd56b15c33885$var$showScore($197cd56b15c33885$var$game.getScore());\n        $197cd56b15c33885$var$updateField();\n    }\n    if ($197cd56b15c33885$var$startBtn.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$updateStartBtn(false);\n        $197cd56b15c33885$var$firstMove = true;\n        $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$STATUS_CLASSES.start);\n        $197cd56b15c33885$var$showScore($197cd56b15c33885$var$game.getScore());\n        $197cd56b15c33885$var$updateField();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.status === \"idle\") return false;\n    if ($197cd56b15c33885$var$game.status === \"playing\") {\n        var keyActions = {\n            ArrowUp: function() {\n                return $197cd56b15c33885$var$game.moveUp();\n            },\n            ArrowRight: function() {\n                return $197cd56b15c33885$var$game.moveRight();\n            },\n            ArrowDown: function() {\n                return $197cd56b15c33885$var$game.moveDown();\n            },\n            ArrowLeft: function() {\n                return $197cd56b15c33885$var$game.moveLeft();\n            }\n        };\n        var action = keyActions[e.key];\n        if (action && action()) $197cd56b15c33885$var$updateField();\n    }\n    if ($197cd56b15c33885$var$firstMove) {\n        $197cd56b15c33885$var$updateStartBtn(true);\n        $197cd56b15c33885$var$firstMove = false;\n    }\n    $197cd56b15c33885$var$showScore($197cd56b15c33885$var$game.getScore());\n    if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$STATUS_CLASSES.win);\n    if ($197cd56b15c33885$var$game.status === \"lose\") $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$STATUS_CLASSES.lose);\n});\nfunction $197cd56b15c33885$var$showMessage(statusClass) {\n    $197cd56b15c33885$var$messages.forEach(function(message) {\n        if (message.classList.contains(statusClass)) message.classList.remove(\"hidden\");\n        else message.classList.add(\"hidden\");\n    });\n}\nfunction $197cd56b15c33885$var$showScore(score) {\n    $197cd56b15c33885$var$scoreDisplay.textContent = score;\n}\nfunction $197cd56b15c33885$var$updateField() {\n    var fragment = $197cd56b15c33885$var$game.updateField($197cd56b15c33885$var$field);\n    $197cd56b15c33885$var$field.appendChild(fragment);\n}\nfunction $197cd56b15c33885$var$updateStartBtn(isRestart) {\n    if (isRestart) {\n        $197cd56b15c33885$var$startBtn.classList.remove(\"start\");\n        $197cd56b15c33885$var$startBtn.classList.add(\"restart\");\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$startBtn.classList.remove(\"restart\");\n        $197cd56b15c33885$var$startBtn.classList.add(\"start\");\n        $197cd56b15c33885$var$startBtn.textContent = \"Start\";\n    }\n}\n\n})();\n//# sourceMappingURL=index.2a9fa7d3.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst field = document.querySelector('.game-field tbody');\nconst startBtn = document.querySelector('.start');\nconst messages = document.querySelectorAll('.message');\nconst scoreDisplay = document.querySelector('.game-score');\n\nconst STATUS_CLASSES = {\n  start: 'message-start',\n  win: 'message-win',\n  lose: 'message-lose',\n};\n\nconst INITIAL_STATE = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet game = new Game(INITIAL_STATE);\nlet firstMove = true;\nlet gameStart = false;\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.textContent === 'Start') {\n    gameStart = !gameStart; // if startBtn push one more time\n\n    if (gameStart) {\n      game.start();\n    } else {\n      game = new Game(INITIAL_STATE);\n      game.start();\n      gameStart = true;\n    }\n    showMessage(null);\n    showScore(game.getScore());\n\n    updateField();\n  }\n\n  if (startBtn.textContent === 'Restart') {\n    game.restart();\n    updateStartBtn(false);\n    firstMove = true;\n\n    showMessage(STATUS_CLASSES.start);\n    showScore(game.getScore());\n\n    updateField();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.status === 'idle') {\n    return false;\n  }\n\n  if (game.status === 'playing') {\n    const keyActions = {\n      ArrowUp: () => game.moveUp(),\n      ArrowRight: () => game.moveRight(),\n      ArrowDown: () => game.moveDown(),\n      ArrowLeft: () => game.moveLeft(),\n    };\n\n    const action = keyActions[e.key];\n\n    if (action && action()) {\n      updateField();\n    }\n  }\n\n  if (firstMove) {\n    updateStartBtn(true);\n    firstMove = false;\n  }\n\n  showScore(game.getScore());\n\n  if (game.status === 'win') {\n    showMessage(STATUS_CLASSES.win);\n  }\n\n  if (game.status === 'lose') {\n    showMessage(STATUS_CLASSES.lose);\n  }\n});\n\nfunction showMessage(statusClass) {\n  messages.forEach((message) => {\n    if (message.classList.contains(statusClass)) {\n      message.classList.remove('hidden');\n    } else {\n      message.classList.add('hidden');\n    }\n  });\n}\n\nfunction showScore(score) {\n  scoreDisplay.textContent = score;\n}\n\nfunction updateField() {\n  const fragment = game.updateField(field);\n\n  field.appendChild(fragment);\n}\n\nfunction updateStartBtn(isRestart) {\n  if (isRestart) {\n    startBtn.classList.remove('start');\n    startBtn.classList.add('restart');\n    startBtn.textContent = 'Restart';\n  } else {\n    startBtn.classList.remove('restart');\n    startBtn.classList.add('start');\n    startBtn.textContent = 'Start';\n  }\n}\n","'use strict';\n\nclass Game {\n  // static INITIAL_STATE = [\n  //   [0, 0, 0, 0],\n  //   [0, 0, 0, 0],\n  //   [0, 0, 0, 0],\n  //   [0, 0, 0, 0],\n  // ];\n\n  // static getInitialState(state) {\n  //   return state || Game.INITIAL_STATE.map((row) => [...row]);\n  // }\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    // this.state = Game.getInitialState(initialState);\n    this.state = this.initialState.map((row) => [...row]);\n    this.hasMoved = false;\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.status === 'playing') {\n      return this.makeMove('left');\n    }\n  }\n  moveRight() {\n    if (this.status === 'playing') {\n      return this.makeMove('right');\n    }\n  }\n  moveUp() {\n    if (this.status === 'playing') {\n      return this.makeMove('up');\n    }\n  }\n\n  moveDown() {\n    if (this.status === 'playing') {\n      return this.makeMove('down');\n    }\n  }\n\n  makeMove(direction) {\n    this.hasMoved = this.moveLines(direction);\n\n    if (this.hasMoved) {\n      this.generateNewCell();\n      this.hasMoved = false;\n      this.getStatus();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveLines(direction, { precededCheckMove } = { precededCheckMove: false }) {\n    const size = this.state.length;\n    const isVertical = direction === 'up' || direction === 'down';\n\n    const state = precededCheckMove ? this.getStateCopy() : this.state;\n    const oldState = this.getStateCopy();\n\n    for (let i = 0; i < size; i++) {\n      const line = [];\n\n      for (let j = 0; j < size; j++) {\n        line.push(isVertical ? this.state[j][i] : this.state[i][j]);\n      }\n\n      const newLine = this.mergeLine(line, direction, { precededCheckMove });\n\n      for (let j = 0; j < size; j++) {\n        if (isVertical) {\n          state[j][i] = newLine[j];\n        } else {\n          state[i][j] = newLine[j];\n        }\n      }\n    }\n\n    return this.isMove(oldState, state);\n  }\n\n  isMove(oldState, newState) {\n    for (let i = 0; i < oldState.length; i++) {\n      for (let j = 0; j < oldState.length; j++) {\n        if (oldState[i][j] !== newState[i][j]) {\n          return true; // if there is a diff in state\n        }\n      }\n    }\n\n    return false; // if there is no diff in state\n  }\n\n  mergeLine(line, direction, { precededCheckMove }) {\n    const size = line.length;\n    const stack = [];\n    const newLine = new Array(size).fill(0);\n\n    const startIndex =\n      direction === 'up' || direction === 'left' ? 0 : size - 1;\n    const endIndex = direction === 'up' || direction === 'left' ? size : -1;\n    const step = direction === 'up' || direction === 'left' ? 1 : -1;\n\n    let newIndex = startIndex;\n\n    for (let i = startIndex; i !== endIndex; i += step) {\n      const cellValue = line[i];\n\n      if (cellValue !== 0) {\n        if (stack.length === 0) {\n          stack.push(cellValue);\n        } else {\n          if (stack[0] === cellValue) {\n            const mergedValue = +stack[0] + +cellValue;\n\n            newLine[newIndex] = stack.pop() + cellValue;\n            newIndex += step;\n\n            if (!precededCheckMove) {\n              this.score += mergedValue;\n            }\n          } else {\n            newLine[newIndex] = stack.pop();\n            newIndex += step;\n            stack.push(cellValue);\n          }\n        }\n      }\n    }\n\n    if (stack.length > 0) {\n      newLine[newIndex] = stack.pop();\n    }\n\n    return newLine;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStateCopy() {\n    return this.state.map((row) => [...row]);\n  }\n\n  getStatus() {\n    if (this.checkWin()) {\n      this.status = 'win';\n    } else if (this.status === 'playing' && !this.hasMoreMove()) {\n      this.status = 'lose';\n    }\n\n    return this.status;\n  }\n\n  checkWin() {\n    return this.state.some((line) => line.includes(2048));\n  }\n\n  start() {\n    this.status = 'playing';\n    this.generateNewCell();\n    this.generateNewCell();\n  }\n\n  restart() {\n    // this.state = Game.getInitialState();\n    this.state = this.initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  updateField(field) {\n    for (let i = 0; i < field.rows.length; i++) {\n      for (let j = 0; j < field.rows[i].cells.length; j++) {\n        const cellValue = this.state[i][j];\n\n        field.rows[i].cells[j].textContent = cellValue !== 0 ? cellValue : '';\n\n        if (cellValue !== '') {\n          field.rows[i].cells[j].setAttribute(\n            'class',\n            `field-cell field-cell--${cellValue}`,\n          );\n        }\n      }\n    }\n\n    const fragment = document.createDocumentFragment();\n\n    Array.from(field.rows).forEach((row) => fragment.appendChild(row));\n\n    return fragment;\n  }\n\n  generateNewCell() {\n    const lines = this.state;\n    const cellNum = Math.random() < 0.1 ? 4 : 2;\n\n    const emptyCells = [];\n\n    for (let i = 0; i < lines.length; i++) {\n      for (let j = 0; j < lines[i].length; j++) {\n        const cellValue = lines[i][j];\n\n        if (cellValue === 0) {\n          emptyCells.push({\n            row: i,\n            cell: j,\n          });\n        }\n      }\n    }\n\n    if (!emptyCells.length) {\n      this.getStatus();\n\n      return false; // do not generate new cell\n    }\n\n    const randomEmptyCellIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row, cell } = emptyCells[randomEmptyCellIndex];\n\n    this.state[row][cell] = cellNum;\n  }\n\n  hasMoreMove() {\n    return (\n      this.moveLines('up', { precededCheckMove: true }) ||\n      this.moveLines('down', { precededCheckMove: true }) ||\n      this.moveLines('left', { precededCheckMove: true }) ||\n      this.moveLines('right', { precededCheckMove: true })\n    );\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","protoProps","Game","initialState","arguments","instance","Constructor","state","map","row","hasMoved","status","score","key","value","makeMove","direction","moveLines","generateNewCell","getStatus","precededCheckMove","size","isVertical","getStateCopy","oldState","line","j","push","newLine","mergeLine","j1","isMove","newState","param","stack","fill","startIndex","endIndex","step","newIndex","cellValue","mergedValue","pop","checkWin","hasMoreMove","some","includes","field","rows","cells","textContent","setAttribute","concat","fragment","document","createDocumentFragment","forEach","appendChild","lines","emptyCells","cell","randomEmptyCellIndex","Math","floor","random","_emptyCells_randomEmptyCellIndex","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$field","querySelector","$197cd56b15c33885$var$startBtn","$197cd56b15c33885$var$messages","querySelectorAll","$197cd56b15c33885$var$scoreDisplay","$197cd56b15c33885$var$STATUS_CLASSES","start","win","lose","$197cd56b15c33885$var$INITIAL_STATE","$197cd56b15c33885$var$game","$197cd56b15c33885$var$firstMove","$197cd56b15c33885$var$gameStart","$197cd56b15c33885$var$showMessage","statusClass","message","classList","contains","remove","add","$197cd56b15c33885$var$showScore","$197cd56b15c33885$var$updateField","updateField","$197cd56b15c33885$var$updateStartBtn","isRestart","addEventListener","getScore","restart","e","action","keyActions","ArrowUp","moveUp","ArrowRight","moveRight","ArrowDown","moveDown","ArrowLeft","moveLeft"],"version":3,"file":"index.2a9fa7d3.js.map"}